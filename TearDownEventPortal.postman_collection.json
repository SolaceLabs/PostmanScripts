{
	"info": {
		"_postman_id": "7481d2dd-6790-4a88-a1c5-8fba6ffdfbd2",
		"name": "Tear Down Event Portal- THIS WILL REMOVE ALL ENVIRONMENTS, MEM, DOMAINS, APPS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24825170"
	},
	"item": [
		{
			"name": "Get all applications",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = JSON.parse(responseBody);\r",
							"\r",
							"var epApplicationIds = [];\r",
							"\r",
							"for(var i=0; i < response.data.length; i++){\r",
							"        epApplicationIds.push(response.data[i].id);\r",
							"}\r",
							"pm.variables.set(\"epApplicationIds\", epApplicationIds);\r",
							"\r",
							"pm.variables.set(\"epApplicationIdCount\", 0);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json;charset=UTF-8"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=100",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"architecture",
						"applications"
					],
					"query": [
						{
							"key": "pageSize",
							"value": "100",
							"description": "The number of applications to get per page."
						},
						{
							"key": "pageNumber",
							"value": "1",
							"description": "The page number to get.",
							"disabled": true
						},
						{
							"key": "name",
							"value": "reprehenderit aliquip exercitation",
							"description": "Name of the application to match on.",
							"disabled": true
						},
						{
							"key": "applicationDomainId",
							"value": "reprehenderit aliquip exercitation",
							"description": "Match only applications in the given application domain.",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "dolore sunt irure",
							"description": "Match only applications with the given IDs separated by commas.",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "sample value",
							"description": "Match only applications with the given IDs separated by commas.",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "reprehenderit aliquip exercitation",
							"description": "Sort based on the provided parameters. <br> The value can either be a standalone field name (`?sort=<field>`) or a field and direction, which must be delimited by a colon (`?sort=<field>:<asc|desc>`). If the direction is not specified, the default is ascending.",
							"disabled": true
						},
						{
							"key": "customAttributes",
							"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`",
							"description": "Returns the entities that match the custom attribute filter.<br>To filter by custom attribute name and value, use the format: `customAttributes=<custom-attribute-name>==<custom-attribute-value>`. <br>To filter by custom attribute name, use the format: `customAttributes=<custom-attribute-name>`. <br>The filter supports the `AND` operator for multiple custom attribute definitions (not multiple values for a given definition). Use `;` (`semicolon`) to separate multiple queries with `AND` operation. <br>Note: the filter only supports custom attribute values containing characters in `[a-zA-Z0-9_\\-\\. ]`.",
							"disabled": true
						},
						{
							"key": "applicationType",
							"value": "reprehenderit aliquip exercitation",
							"description": "Match only applications with the given applicationType.",
							"disabled": true
						}
					]
				},
				"description": "Use this API to retrieve a list of applications that match the given parameters."
			},
			"response": [
				{
					"name": "Retrieve a list of applications and the accompanying metadata.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\n  \"data\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"meta\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
				},
				{
					"name": "Bad Request.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Forbidden.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Method Not Allowed",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Internal Server Error.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Implemented",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Not Implemented",
					"code": 501,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Service Unavailable.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Gateway Timeout.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Gateway Timeout",
					"code": 504,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Gets the application objects",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;charset=UTF-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20",
									"description": "The number of applications to get per page.",
									"disabled": true
								},
								{
									"key": "pageNumber",
									"value": "1",
									"description": "The page number to get.",
									"disabled": true
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation",
									"description": "Name of the application to match on.",
									"disabled": true
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation",
									"description": "Match only applications in the given application domain.",
									"disabled": true
								},
								{
									"key": "ids",
									"value": "dolore sunt irure",
									"description": "Match only applications with the given IDs separated by commas.",
									"disabled": true
								},
								{
									"key": "ids",
									"value": "quis",
									"description": "Match only applications with the given IDs separated by commas.",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation",
									"description": "Sort based on the provided parameters. <br> The value can either be a standalone field name (`?sort=<field>`) or a field and direction, which must be delimited by a colon (`?sort=<field>:<asc|desc>`). If the direction is not specified, the default is ascending.",
									"disabled": true
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`",
									"description": "Returns the entities that match the custom attribute filter.<br>To filter by custom attribute name and value, use the format: `customAttributes=<custom-attribute-name>==<custom-attribute-value>`. <br>To filter by custom attribute name, use the format: `customAttributes=<custom-attribute-name>`. <br>The filter supports the `AND` operator for multiple custom attribute definitions (not multiple values for a given definition). Use `;` (`semicolon`) to separate multiple queries with `AND` operation. <br>Note: the filter only supports custom attribute values containing characters in `[a-zA-Z0-9_\\-\\. ]`.",
									"disabled": true
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation",
									"description": "Match only applications with the given applicationType.",
									"disabled": true
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Mon, 05 Dec 2022 16:23:04 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json;charset=UTF-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=31536000; includeSubDomains"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache; no-store; must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "Set-Cookie",
							"value": "rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 04-Dec-2022 16:23:04 GMT; SameSite=lax"
						},
						{
							"key": "Vary",
							"value": "accept-encoding"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": [\n        {\n            \"createdTime\": \"2022-12-05T13:57:12.195Z\",\n            \"updatedTime\": \"2022-12-05T13:57:21.590Z\",\n            \"createdBy\": \"kh8psmt8dnb\",\n            \"changedBy\": \"kh8psmt8dnb\",\n            \"id\": \"1jmiwwxg81n\",\n            \"name\": \"Customer Facing Mobile Application\",\n            \"applicationType\": \"standard\",\n            \"brokerType\": \"solace\",\n            \"applicationDomainId\": \"9strsc2i2ns\",\n            \"numberOfVersions\": 6,\n            \"customAttributes\": [],\n            \"type\": \"application\"\n        },\n        {\n            \"createdTime\": \"2022-12-05T13:57:12.265Z\",\n            \"updatedTime\": \"2022-12-05T13:57:24.969Z\",\n            \"createdBy\": \"kh8psmt8dnb\",\n            \"changedBy\": \"kh8psmt8dnb\",\n            \"id\": \"pbipd91nj0x\",\n            \"name\": \"Customer Fraud Prevention\",\n            \"applicationType\": \"standard\",\n            \"brokerType\": \"solace\",\n            \"applicationDomainId\": \"fncxkjwpx24\",\n            \"numberOfVersions\": 4,\n            \"customAttributes\": [],\n            \"type\": \"application\"\n        },\n        {\n            \"createdTime\": \"2022-12-05T13:57:12.277Z\",\n            \"updatedTime\": \"2022-12-05T13:57:25.316Z\",\n            \"createdBy\": \"kh8psmt8dnb\",\n            \"changedBy\": \"kh8psmt8dnb\",\n            \"id\": \"7ccffovh9ah\",\n            \"name\": \"Customer Loyalty Management\",\n            \"applicationType\": \"standard\",\n            \"brokerType\": \"solace\",\n            \"applicationDomainId\": \"fncxkjwpx24\",\n            \"numberOfVersions\": 4,\n            \"customAttributes\": [],\n            \"type\": \"application\"\n        },\n        {\n            \"createdTime\": \"2022-12-05T13:57:12.207Z\",\n            \"updatedTime\": \"2022-12-05T13:57:21.820Z\",\n            \"createdBy\": \"kh8psmt8dnb\",\n            \"changedBy\": \"kh8psmt8dnb\",\n            \"id\": \"352utl3pg8b\",\n            \"name\": \"Data Product - Daily Store Sales Summary\",\n            \"applicationType\": \"standard\",\n            \"brokerType\": \"solace\",\n            \"applicationDomainId\": \"9strsc2i2ns\",\n            \"numberOfVersions\": 3,\n            \"customAttributes\": [],\n            \"type\": \"application\"\n        },\n        {\n            \"createdTime\": \"2022-12-05T13:57:12.218Z\",\n            \"updatedTime\": \"2022-12-05T13:57:21.496Z\",\n            \"createdBy\": \"kh8psmt8dnb\",\n            \"changedBy\": \"kh8psmt8dnb\",\n            \"id\": \"20vexd7tqj5\",\n            \"name\": \"Data Product - Real-time Customer Sentiment\",\n            \"applicationType\": \"standard\",\n            \"brokerType\": \"solace\",\n            \"applicationDomainId\": \"9strsc2i2ns\",\n            \"numberOfVersions\": 4,\n            \"customAttributes\": [],\n            \"type\": \"application\"\n        },\n        {\n            \"createdTime\": \"2022-12-05T13:57:12.230Z\",\n            \"updatedTime\": \"2022-12-05T13:57:21.697Z\",\n            \"createdBy\": \"kh8psmt8dnb\",\n            \"changedBy\": \"kh8psmt8dnb\",\n            \"id\": \"cydv26lagnu\",\n            \"name\": \"In-Store Fulfillment Mobile Application\",\n            \"applicationType\": \"standard\",\n            \"brokerType\": \"solace\",\n            \"applicationDomainId\": \"9strsc2i2ns\",\n            \"numberOfVersions\": 2,\n            \"customAttributes\": [],\n            \"type\": \"application\"\n        },\n        {\n            \"createdTime\": \"2022-12-05T13:57:12.242Z\",\n            \"updatedTime\": \"2022-12-05T13:57:21.411Z\",\n            \"createdBy\": \"kh8psmt8dnb\",\n            \"changedBy\": \"kh8psmt8dnb\",\n            \"id\": \"zbo01jikrga\",\n            \"name\": \"Point of Sale System\",\n            \"applicationType\": \"standard\",\n            \"brokerType\": \"solace\",\n            \"applicationDomainId\": \"9strsc2i2ns\",\n            \"numberOfVersions\": 2,\n            \"customAttributes\": [],\n            \"type\": \"application\"\n        },\n        {\n            \"createdTime\": \"2022-12-05T13:57:12.253Z\",\n            \"updatedTime\": \"2022-12-05T13:57:21.930Z\",\n            \"createdBy\": \"kh8psmt8dnb\",\n            \"changedBy\": \"kh8psmt8dnb\",\n            \"id\": \"avdsaiv03b0\",\n            \"name\": \"Smart Shelf Inventory Control\",\n            \"applicationType\": \"standard\",\n            \"brokerType\": \"solace\",\n            \"applicationDomainId\": \"9strsc2i2ns\",\n            \"numberOfVersions\": 3,\n            \"customAttributes\": [],\n            \"type\": \"application\"\n        },\n        {\n            \"createdTime\": \"2022-12-05T13:57:12.288Z\",\n            \"updatedTime\": \"2022-12-05T13:57:25.220Z\",\n            \"createdBy\": \"kh8psmt8dnb\",\n            \"changedBy\": \"kh8psmt8dnb\",\n            \"id\": \"4488jbocigr\",\n            \"name\": \"Workday SaaS Application\",\n            \"applicationType\": \"standard\",\n            \"brokerType\": \"solace\",\n            \"applicationDomainId\": \"fncxkjwpx24\",\n            \"numberOfVersions\": 1,\n            \"customAttributes\": [],\n            \"type\": \"application\"\n        }\n    ],\n    \"meta\": {\n        \"pagination\": {\n            \"pageNumber\": 1,\n            \"count\": 9,\n            \"pageSize\": 20,\n            \"nextPage\": null,\n            \"totalPages\": 1\n        }\n    }\n}"
				}
			]
		},
		{
			"name": "Get all application version object for applications",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(pm.variables.has(\"epApplicationIds\")){\r",
							"    var epApplicationIds = pm.variables.get(\"epApplicationIds\");\r",
							"    var epApplicationIdCount = pm.variables.get(\"epApplicationIdCount\");\r",
							"\r",
							"    pm.collectionVariables.set(\"epApplicationId\", epApplicationIds[epApplicationIdCount]);\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = JSON.parse(responseBody);\r",
							"\r",
							"if(pm.variables.has(\"epApplicationVersionIds\")){\r",
							"    var epApplicationVersionIds = pm.variables.get(\"epApplicationVersionIds\");\r",
							"}else{\r",
							"    var epApplicationVersionIds = [];\r",
							"}\r",
							"\r",
							"for(var i=0; i < response.data.length; i++){\r",
							"        epApplicationVersionIds.push(response.data[i].id);\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"pm.variables.set(\"epApplicationVersionIds\", epApplicationVersionIds);\r",
							"\r",
							"\r",
							"//figure out whether to loop again\r",
							"if(pm.variables.has(\"epApplicationIds\")){\r",
							"    epApplicationIds = pm.variables.get(\"epApplicationIds\");\r",
							"    epApplicationIdCount = pm.variables.get(\"epApplicationIdCount\");\r",
							"    epApplicationIdCount++;\r",
							"    \r",
							"    if(epApplicationIdCount < epApplicationIds.length){\r",
							"        pm.variables.set(\"epApplicationIdCount\", epApplicationIdCount);\r",
							"        postman.setNextRequest(\"Get all application version object for applications\");\r",
							"    }\r",
							"}\r",
							"\r",
							"pm.variables.set(\"epApplicationVersionIdCount\", 0);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json;charset=UTF-8"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions?pageSize=100&applicationIds={{epApplicationId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"architecture",
						"applicationVersions"
					],
					"query": [
						{
							"key": "pageSize",
							"value": "100",
							"description": "The number of application versions to get per page."
						},
						{
							"key": "pageNumber",
							"value": "1",
							"description": "The page number to get.",
							"disabled": true
						},
						{
							"key": "applicationIds",
							"value": "{{epApplicationId}}",
							"description": "Match only application versions of these application IDs, separated by commas."
						},
						{
							"key": "applicationIds",
							"value": "quis",
							"description": "Match only application versions of these application IDs, separated by commas.",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "dolore sunt irure",
							"description": "Match only application versions with the given IDs, separated by commas.",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "quis",
							"description": "Match only application versions with the given IDs, separated by commas.",
							"disabled": true
						},
						{
							"key": "customAttributes",
							"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`",
							"description": "Returns the entities that match the custom attribute filter.<br>To filter by custom attribute name and value, use the format: `customAttributes=<custom-attribute-name>==<custom-attribute-value>`. <br>To filter by custom attribute name, use the format: `customAttributes=<custom-attribute-name>`. <br>The filter supports the `AND` operator for multiple custom attribute definitions (not multiple values for a given definition). Use `;` (`semicolon`) to separate multiple queries with `AND` operation. <br>Note: the filter only supports custom attribute values containing characters in `[a-zA-Z0-9_\\-\\. ]`.",
							"disabled": true
						}
					]
				},
				"description": "Use this API to retrieve a list of application versions that match the given parameters."
			},
			"response": [
				{
					"name": "Retrieve a list of application versions and the accompanying metadata.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions?pageSize=20&pageNumber=1&applicationIds=velit irure eiusmod dolore&applicationIds=culpa&ids=velit irure eiusmod dolore&ids=culpa&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "applicationIds",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "applicationIds",
									"value": "culpa"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\n  \"data\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"meta\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
				},
				{
					"name": "Bad Request.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions?pageSize=20&pageNumber=1&applicationIds=velit irure eiusmod dolore&applicationIds=culpa&ids=velit irure eiusmod dolore&ids=culpa&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "applicationIds",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "applicationIds",
									"value": "culpa"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions?pageSize=20&pageNumber=1&applicationIds=velit irure eiusmod dolore&applicationIds=culpa&ids=velit irure eiusmod dolore&ids=culpa&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "applicationIds",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "applicationIds",
									"value": "culpa"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Forbidden.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions?pageSize=20&pageNumber=1&applicationIds=velit irure eiusmod dolore&applicationIds=culpa&ids=velit irure eiusmod dolore&ids=culpa&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "applicationIds",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "applicationIds",
									"value": "culpa"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions?pageSize=20&pageNumber=1&applicationIds=velit irure eiusmod dolore&applicationIds=culpa&ids=velit irure eiusmod dolore&ids=culpa&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "applicationIds",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "applicationIds",
									"value": "culpa"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Method Not Allowed",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions?pageSize=20&pageNumber=1&applicationIds=velit irure eiusmod dolore&applicationIds=culpa&ids=velit irure eiusmod dolore&ids=culpa&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "applicationIds",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "applicationIds",
									"value": "culpa"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								}
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Internal Server Error.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions?pageSize=20&pageNumber=1&applicationIds=velit irure eiusmod dolore&applicationIds=culpa&ids=velit irure eiusmod dolore&ids=culpa&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "applicationIds",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "applicationIds",
									"value": "culpa"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Implemented",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions?pageSize=20&pageNumber=1&applicationIds=velit irure eiusmod dolore&applicationIds=culpa&ids=velit irure eiusmod dolore&ids=culpa&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "applicationIds",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "applicationIds",
									"value": "culpa"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								}
							]
						}
					},
					"status": "Not Implemented",
					"code": 501,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Service Unavailable.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions?pageSize=20&pageNumber=1&applicationIds=velit irure eiusmod dolore&applicationIds=culpa&ids=velit irure eiusmod dolore&ids=culpa&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "applicationIds",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "applicationIds",
									"value": "culpa"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								}
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Gateway Timeout.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions?pageSize=20&pageNumber=1&applicationIds=velit irure eiusmod dolore&applicationIds=culpa&ids=velit irure eiusmod dolore&ids=culpa&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "applicationIds",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "applicationIds",
									"value": "culpa"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								}
							]
						}
					},
					"status": "Gateway Timeout",
					"code": 504,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				}
			]
		},
		{
			"name": "Update messaging service association for an application version object",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//figure out whether to loop again\r",
							"if(pm.variables.has(\"epApplicationVersionIds\")){\r",
							"    epApplicationVersionIds = pm.variables.get(\"epApplicationVersionIds\");\r",
							"    epApplicationVersionIdCount = pm.variables.get(\"epApplicationVersionIdCount\");\r",
							"    epApplicationVersionIdCount++;\r",
							"    \r",
							"    if(epApplicationVersionIdCount < epApplicationVersionIds.length){\r",
							"        pm.variables.set(\"epApplicationVersionIdCount\", epApplicationVersionIdCount);\r",
							"        postman.setNextRequest(\"Update messaging service association for an application version object\");\r",
							"    }\r",
							"\r",
							"    \r",
							"} \r",
							"\r",
							"pm.variables.set(\"epApplicationIdCount\", 0);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(pm.variables.has(\"epApplicationVersionIds\")){\r",
							"    var epApplicationVersionIds = pm.variables.get(\"epApplicationVersionIds\");\r",
							"    var epApplicationVersionIdCount = pm.variables.get(\"epApplicationVersionIdCount\");\r",
							"    var epMsgServiceIds = pm.variables.get(\"epMsgServiceIds\");\r",
							"\r",
							"\r",
							"    pm.collectionVariables.set(\"epApplicationVersionId\", epApplicationVersionIds[epApplicationVersionIdCount]);\r",
							" \r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json;charset=UTF-8"
					},
					{
						"key": "Accept",
						"value": "application/json;charset=UTF-8"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"messagingServiceIds\": []\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions/:versionId/messagingServices",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"architecture",
						"applicationVersions",
						":versionId",
						"messagingServices"
					],
					"variable": [
						{
							"key": "versionId",
							"value": "{{epApplicationVersionId}}",
							"description": "(Required) The ID of the application version"
						}
					]
				},
				"description": "Use this API to update the messaging service association for an application version."
			},
			"response": [
				{
					"name": "The updated messaging service associations.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"messagingServiceIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions/:versionId/messagingServices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions",
								":versionId",
								"messagingServices"
							],
							"variable": [
								{
									"key": "versionId",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the application version"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\n  \"data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"meta\": {\n    \"nulla_e8\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tempor047\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Bad Request.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"messagingServiceIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions/:versionId/messagingServices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions",
								":versionId",
								"messagingServices"
							],
							"variable": [
								{
									"key": "versionId",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the application version"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"messagingServiceIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions/:versionId/messagingServices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions",
								":versionId",
								"messagingServices"
							],
							"variable": [
								{
									"key": "versionId",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the application version"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Forbidden.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"messagingServiceIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions/:versionId/messagingServices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions",
								":versionId",
								"messagingServices"
							],
							"variable": [
								{
									"key": "versionId",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the application version"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Found.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"messagingServiceIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions/:versionId/messagingServices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions",
								":versionId",
								"messagingServices"
							],
							"variable": [
								{
									"key": "versionId",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the application version"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Method Not Allowed",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"messagingServiceIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions/:versionId/messagingServices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions",
								":versionId",
								"messagingServices"
							],
							"variable": [
								{
									"key": "versionId",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the application version"
								}
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Internal Server Error.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"messagingServiceIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions/:versionId/messagingServices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions",
								":versionId",
								"messagingServices"
							],
							"variable": [
								{
									"key": "versionId",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the application version"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Implemented",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"messagingServiceIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions/:versionId/messagingServices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions",
								":versionId",
								"messagingServices"
							],
							"variable": [
								{
									"key": "versionId",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the application version"
								}
							]
						}
					},
					"status": "Not Implemented",
					"code": 501,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Service Unavailable.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"messagingServiceIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions/:versionId/messagingServices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions",
								":versionId",
								"messagingServices"
							],
							"variable": [
								{
									"key": "versionId",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the application version"
								}
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Gateway Timeout.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"messagingServiceIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationVersions/:versionId/messagingServices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationVersions",
								":versionId",
								"messagingServices"
							],
							"variable": [
								{
									"key": "versionId",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the application version"
								}
							]
						}
					},
					"status": "Gateway Timeout",
					"code": 504,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				}
			]
		},
		{
			"name": "Get all applications for deletion",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = JSON.parse(responseBody);\r",
							"\r",
							"var epApplicationIds = [];\r",
							"\r",
							"for(var i=0; i < response.data.length; i++){\r",
							"        epApplicationIds.push(response.data[i].id);\r",
							"}\r",
							"pm.variables.set(\"epApplicationIds\", epApplicationIds);\r",
							"\r",
							"if(epApplicationIds.length == 0  ){\r",
							"    postman.setNextRequest(\"Get all application domain objects\");\r",
							"}\r",
							"\r",
							"pm.variables.set(\"epApplicationIdCount\", 0);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json;charset=UTF-8"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=100",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"architecture",
						"applications"
					],
					"query": [
						{
							"key": "pageSize",
							"value": "100",
							"description": "The number of applications to get per page."
						},
						{
							"key": "pageNumber",
							"value": "1",
							"description": "The page number to get.",
							"disabled": true
						},
						{
							"key": "name",
							"value": "reprehenderit aliquip exercitation",
							"description": "Name of the application to match on.",
							"disabled": true
						},
						{
							"key": "applicationDomainId",
							"value": "reprehenderit aliquip exercitation",
							"description": "Match only applications in the given application domain.",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "dolore sunt irure",
							"description": "Match only applications with the given IDs separated by commas.",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "sample value",
							"description": "Match only applications with the given IDs separated by commas.",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "reprehenderit aliquip exercitation",
							"description": "Sort based on the provided parameters. <br> The value can either be a standalone field name (`?sort=<field>`) or a field and direction, which must be delimited by a colon (`?sort=<field>:<asc|desc>`). If the direction is not specified, the default is ascending.",
							"disabled": true
						},
						{
							"key": "customAttributes",
							"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`",
							"description": "Returns the entities that match the custom attribute filter.<br>To filter by custom attribute name and value, use the format: `customAttributes=<custom-attribute-name>==<custom-attribute-value>`. <br>To filter by custom attribute name, use the format: `customAttributes=<custom-attribute-name>`. <br>The filter supports the `AND` operator for multiple custom attribute definitions (not multiple values for a given definition). Use `;` (`semicolon`) to separate multiple queries with `AND` operation. <br>Note: the filter only supports custom attribute values containing characters in `[a-zA-Z0-9_\\-\\. ]`.",
							"disabled": true
						},
						{
							"key": "applicationType",
							"value": "reprehenderit aliquip exercitation",
							"description": "Match only applications with the given applicationType.",
							"disabled": true
						}
					]
				},
				"description": "Use this API to retrieve a list of applications that match the given parameters."
			},
			"response": [
				{
					"name": "Retrieve a list of applications and the accompanying metadata.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\n  \"data\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"meta\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
				},
				{
					"name": "Bad Request.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Forbidden.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Method Not Allowed",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Internal Server Error.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Implemented",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Not Implemented",
					"code": 501,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Service Unavailable.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Gateway Timeout.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&applicationDomainId=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&sort=reprehenderit aliquip exercitation&customAttributes=searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`&applicationType=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`"
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Gateway Timeout",
					"code": 504,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Gets the application objects",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;charset=UTF-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20",
									"description": "The number of applications to get per page.",
									"disabled": true
								},
								{
									"key": "pageNumber",
									"value": "1",
									"description": "The page number to get.",
									"disabled": true
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation",
									"description": "Name of the application to match on.",
									"disabled": true
								},
								{
									"key": "applicationDomainId",
									"value": "reprehenderit aliquip exercitation",
									"description": "Match only applications in the given application domain.",
									"disabled": true
								},
								{
									"key": "ids",
									"value": "dolore sunt irure",
									"description": "Match only applications with the given IDs separated by commas.",
									"disabled": true
								},
								{
									"key": "ids",
									"value": "quis",
									"description": "Match only applications with the given IDs separated by commas.",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation",
									"description": "Sort based on the provided parameters. <br> The value can either be a standalone field name (`?sort=<field>`) or a field and direction, which must be delimited by a colon (`?sort=<field>:<asc|desc>`). If the direction is not specified, the default is ascending.",
									"disabled": true
								},
								{
									"key": "customAttributes",
									"value": "searching by single custom attribute definition: `color==red`. <br>Searching by single custom attribute name: `color`. <br>Searching by multiple custom attribute definition: `color==red;security==high`. <br>Searching by  multiple custom attribute name: `color;security`. <br>Searching by  multiple custom attribute name `AND` custom attribute definition: `color;security==high`",
									"description": "Returns the entities that match the custom attribute filter.<br>To filter by custom attribute name and value, use the format: `customAttributes=<custom-attribute-name>==<custom-attribute-value>`. <br>To filter by custom attribute name, use the format: `customAttributes=<custom-attribute-name>`. <br>The filter supports the `AND` operator for multiple custom attribute definitions (not multiple values for a given definition). Use `;` (`semicolon`) to separate multiple queries with `AND` operation. <br>Note: the filter only supports custom attribute values containing characters in `[a-zA-Z0-9_\\-\\. ]`.",
									"disabled": true
								},
								{
									"key": "applicationType",
									"value": "reprehenderit aliquip exercitation",
									"description": "Match only applications with the given applicationType.",
									"disabled": true
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Mon, 05 Dec 2022 16:23:04 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json;charset=UTF-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=31536000; includeSubDomains"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache; no-store; must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "Set-Cookie",
							"value": "rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 04-Dec-2022 16:23:04 GMT; SameSite=lax"
						},
						{
							"key": "Vary",
							"value": "accept-encoding"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": [\n        {\n            \"createdTime\": \"2022-12-05T13:57:12.195Z\",\n            \"updatedTime\": \"2022-12-05T13:57:21.590Z\",\n            \"createdBy\": \"kh8psmt8dnb\",\n            \"changedBy\": \"kh8psmt8dnb\",\n            \"id\": \"1jmiwwxg81n\",\n            \"name\": \"Customer Facing Mobile Application\",\n            \"applicationType\": \"standard\",\n            \"brokerType\": \"solace\",\n            \"applicationDomainId\": \"9strsc2i2ns\",\n            \"numberOfVersions\": 6,\n            \"customAttributes\": [],\n            \"type\": \"application\"\n        },\n        {\n            \"createdTime\": \"2022-12-05T13:57:12.265Z\",\n            \"updatedTime\": \"2022-12-05T13:57:24.969Z\",\n            \"createdBy\": \"kh8psmt8dnb\",\n            \"changedBy\": \"kh8psmt8dnb\",\n            \"id\": \"pbipd91nj0x\",\n            \"name\": \"Customer Fraud Prevention\",\n            \"applicationType\": \"standard\",\n            \"brokerType\": \"solace\",\n            \"applicationDomainId\": \"fncxkjwpx24\",\n            \"numberOfVersions\": 4,\n            \"customAttributes\": [],\n            \"type\": \"application\"\n        },\n        {\n            \"createdTime\": \"2022-12-05T13:57:12.277Z\",\n            \"updatedTime\": \"2022-12-05T13:57:25.316Z\",\n            \"createdBy\": \"kh8psmt8dnb\",\n            \"changedBy\": \"kh8psmt8dnb\",\n            \"id\": \"7ccffovh9ah\",\n            \"name\": \"Customer Loyalty Management\",\n            \"applicationType\": \"standard\",\n            \"brokerType\": \"solace\",\n            \"applicationDomainId\": \"fncxkjwpx24\",\n            \"numberOfVersions\": 4,\n            \"customAttributes\": [],\n            \"type\": \"application\"\n        },\n        {\n            \"createdTime\": \"2022-12-05T13:57:12.207Z\",\n            \"updatedTime\": \"2022-12-05T13:57:21.820Z\",\n            \"createdBy\": \"kh8psmt8dnb\",\n            \"changedBy\": \"kh8psmt8dnb\",\n            \"id\": \"352utl3pg8b\",\n            \"name\": \"Data Product - Daily Store Sales Summary\",\n            \"applicationType\": \"standard\",\n            \"brokerType\": \"solace\",\n            \"applicationDomainId\": \"9strsc2i2ns\",\n            \"numberOfVersions\": 3,\n            \"customAttributes\": [],\n            \"type\": \"application\"\n        },\n        {\n            \"createdTime\": \"2022-12-05T13:57:12.218Z\",\n            \"updatedTime\": \"2022-12-05T13:57:21.496Z\",\n            \"createdBy\": \"kh8psmt8dnb\",\n            \"changedBy\": \"kh8psmt8dnb\",\n            \"id\": \"20vexd7tqj5\",\n            \"name\": \"Data Product - Real-time Customer Sentiment\",\n            \"applicationType\": \"standard\",\n            \"brokerType\": \"solace\",\n            \"applicationDomainId\": \"9strsc2i2ns\",\n            \"numberOfVersions\": 4,\n            \"customAttributes\": [],\n            \"type\": \"application\"\n        },\n        {\n            \"createdTime\": \"2022-12-05T13:57:12.230Z\",\n            \"updatedTime\": \"2022-12-05T13:57:21.697Z\",\n            \"createdBy\": \"kh8psmt8dnb\",\n            \"changedBy\": \"kh8psmt8dnb\",\n            \"id\": \"cydv26lagnu\",\n            \"name\": \"In-Store Fulfillment Mobile Application\",\n            \"applicationType\": \"standard\",\n            \"brokerType\": \"solace\",\n            \"applicationDomainId\": \"9strsc2i2ns\",\n            \"numberOfVersions\": 2,\n            \"customAttributes\": [],\n            \"type\": \"application\"\n        },\n        {\n            \"createdTime\": \"2022-12-05T13:57:12.242Z\",\n            \"updatedTime\": \"2022-12-05T13:57:21.411Z\",\n            \"createdBy\": \"kh8psmt8dnb\",\n            \"changedBy\": \"kh8psmt8dnb\",\n            \"id\": \"zbo01jikrga\",\n            \"name\": \"Point of Sale System\",\n            \"applicationType\": \"standard\",\n            \"brokerType\": \"solace\",\n            \"applicationDomainId\": \"9strsc2i2ns\",\n            \"numberOfVersions\": 2,\n            \"customAttributes\": [],\n            \"type\": \"application\"\n        },\n        {\n            \"createdTime\": \"2022-12-05T13:57:12.253Z\",\n            \"updatedTime\": \"2022-12-05T13:57:21.930Z\",\n            \"createdBy\": \"kh8psmt8dnb\",\n            \"changedBy\": \"kh8psmt8dnb\",\n            \"id\": \"avdsaiv03b0\",\n            \"name\": \"Smart Shelf Inventory Control\",\n            \"applicationType\": \"standard\",\n            \"brokerType\": \"solace\",\n            \"applicationDomainId\": \"9strsc2i2ns\",\n            \"numberOfVersions\": 3,\n            \"customAttributes\": [],\n            \"type\": \"application\"\n        },\n        {\n            \"createdTime\": \"2022-12-05T13:57:12.288Z\",\n            \"updatedTime\": \"2022-12-05T13:57:25.220Z\",\n            \"createdBy\": \"kh8psmt8dnb\",\n            \"changedBy\": \"kh8psmt8dnb\",\n            \"id\": \"4488jbocigr\",\n            \"name\": \"Workday SaaS Application\",\n            \"applicationType\": \"standard\",\n            \"brokerType\": \"solace\",\n            \"applicationDomainId\": \"fncxkjwpx24\",\n            \"numberOfVersions\": 1,\n            \"customAttributes\": [],\n            \"type\": \"application\"\n        }\n    ],\n    \"meta\": {\n        \"pagination\": {\n            \"pageNumber\": 1,\n            \"count\": 9,\n            \"pageSize\": 20,\n            \"nextPage\": null,\n            \"totalPages\": 1\n        }\n    }\n}"
				}
			]
		},
		{
			"name": "Deletes an application object instance",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(pm.variables.has(\"epApplicationIds\")){\r",
							"    var epApplicationIds = pm.variables.get(\"epApplicationIds\");\r",
							"    var epApplicationIdCount = pm.variables.get(\"epApplicationIdCount\");\r",
							"\r",
							"    pm.collectionVariables.set(\"epApplicationId\", epApplicationIds[epApplicationIdCount]);\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//figure out whether to loop again\r",
							"if(pm.variables.has(\"epApplicationIds\")){\r",
							"    epApplicationIds = pm.variables.get(\"epApplicationIds\");\r",
							"    epApplicationIdCount = pm.variables.get(\"epApplicationIdCount\");\r",
							"    if(epApplicationIdCount < epApplicationIds.length){\r",
							"        epApplicationIdCount++;\r",
							"        pm.variables.set(\"epApplicationIdCount\", epApplicationIdCount);\r",
							"        postman.setNextRequest(\"Deletes an application object instance\");\r",
							"    }else{\r",
							"        pm.variables.set(\"epApplicationIdCount\", \"0\");\r",
							"        postman.setNextRequest(\"Get all applications for deletion\");\r",
							"    }\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/architecture/applications/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"architecture",
						"applications",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{epApplicationId}}",
							"description": "(Required) The ID of the application"
						}
					]
				},
				"description": "Use this API to delete an application."
			},
			"response": [
				{
					"name": "No content is returned.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Forbidden.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Found.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Method Not Allowed",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application"
								}
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Internal Server Error.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Implemented",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application"
								}
							]
						}
					},
					"status": "Not Implemented",
					"code": 501,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Service Unavailable.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application"
								}
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Gateway Timeout.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applications/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application"
								}
							]
						}
					},
					"status": "Gateway Timeout",
					"code": 504,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				}
			]
		},
		{
			"name": "Get all application domain objects",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = JSON.parse(responseBody);\r",
							"\r",
							"var epApplicationDomainIds = [];\r",
							"\r",
							"for(var i=0; i < response.data.length; i++){\r",
							"        epApplicationDomainIds.push(response.data[i].id);\r",
							"}\r",
							"pm.variables.set(\"epApplicationDomainIds\", epApplicationDomainIds);\r",
							"\r",
							"if(epApplicationDomainIds.length == 0  ){\r",
							"    //if there is no application domains left, end script\r",
							"    postman.setNextRequest(\"Get a list of users in your account\");\r",
							"}\r",
							"pm.variables.set(\"epApplicationDomainIds\", epApplicationDomainIds);\r",
							"pm.variables.set(\"epApplicationDomainIdCount\", 0);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json;charset=UTF-8"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains?pageSize=100",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"architecture",
						"applicationDomains"
					],
					"query": [
						{
							"key": "pageSize",
							"value": "100",
							"description": "The number of application domains to get per page."
						},
						{
							"key": "pageNumber",
							"value": "1",
							"description": "The page number to get.",
							"disabled": true
						},
						{
							"key": "name",
							"value": "reprehenderit aliquip exercitation",
							"description": "Name to be used to match the application domain.",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "dolore sunt irure",
							"description": "Match only application domains with the given IDs separated by commas.",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "quis",
							"description": "Match only application domains with the given IDs separated by commas.",
							"disabled": true
						},
						{
							"key": "include",
							"value": "dolore sunt irure",
							"description": "Specify extra data to be included, options are: stats",
							"disabled": true
						},
						{
							"key": "include",
							"value": "quis",
							"description": "Specify extra data to be included, options are: stats",
							"disabled": true
						}
					]
				},
				"description": "Use this API to retrieve a list of application domains that match the given parameters."
			},
			"response": [
				{
					"name": "Retrieve a list of application domains and the accompanying metadata.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&include=velit irure eiusmod dolore&include=culpa",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "include",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "include",
									"value": "culpa"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\n  \"data\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"meta\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
				},
				{
					"name": "Bad Request.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&include=velit irure eiusmod dolore&include=culpa",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "include",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "include",
									"value": "culpa"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&include=velit irure eiusmod dolore&include=culpa",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "include",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "include",
									"value": "culpa"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Forbidden.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&include=velit irure eiusmod dolore&include=culpa",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "include",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "include",
									"value": "culpa"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&include=velit irure eiusmod dolore&include=culpa",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "include",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "include",
									"value": "culpa"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Method Not Allowed",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&include=velit irure eiusmod dolore&include=culpa",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "include",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "include",
									"value": "culpa"
								}
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Internal Server Error.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&include=velit irure eiusmod dolore&include=culpa",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "include",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "include",
									"value": "culpa"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Implemented",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&include=velit irure eiusmod dolore&include=culpa",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "include",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "include",
									"value": "culpa"
								}
							]
						}
					},
					"status": "Not Implemented",
					"code": 501,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Service Unavailable.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&include=velit irure eiusmod dolore&include=culpa",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "include",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "include",
									"value": "culpa"
								}
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Gateway Timeout.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains?pageSize=20&pageNumber=1&name=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&include=velit irure eiusmod dolore&include=culpa",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "include",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "include",
									"value": "culpa"
								}
							]
						}
					},
					"status": "Gateway Timeout",
					"code": 504,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				}
			]
		},
		{
			"name": "Deletes an application domain object",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(pm.variables.has(\"epApplicationDomainIds\")){\r",
							"    var epApplicationDomainIds = pm.variables.get(\"epApplicationDomainIds\");\r",
							"    var epApplicationDomainIdCount = pm.variables.get(\"epApplicationDomainIdCount\");\r",
							"\r",
							"    pm.collectionVariables.set(\"epApplicationDomainId\", epApplicationDomainIds[epApplicationDomainIdCount]);\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//figure out whether to loop again\r",
							"if(pm.variables.has(\"epApplicationDomainIds\")){\r",
							"    epApplicationDomainIds = pm.variables.get(\"epApplicationDomainIds\");\r",
							"    epApplicationDomainIdCount = pm.variables.get(\"epApplicationDomainIdCount\");\r",
							"    epApplicationDomainIdCount++;\r",
							"    if(epApplicationDomainIdCount < epApplicationDomainIds.length){\r",
							"        pm.variables.set(\"epApplicationDomainIdCount\", epApplicationDomainIdCount);\r",
							"        postman.setNextRequest(\"Deletes an application domain object\");\r",
							"    }else{\r",
							"        //loop back to see if application domains exist (because dependencies made things fail. )\r",
							"        postman.setNextRequest(\"Get all application domain objects\");\r",
							"    }\r",
							"}\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"architecture",
						"applicationDomains",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{epApplicationDomainId}}",
							"description": "(Required) The ID of the application domain object."
						}
					]
				},
				"description": "Use this API to delete an application domain. This action also deletes all applications, events, and schemas in the application domain. You cannot undo this operation."
			},
			"response": [
				{
					"name": "No content is returned.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application domain object."
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application domain object."
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application domain object."
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Forbidden.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application domain object."
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Found.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application domain object."
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Method Not Allowed",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application domain object."
								}
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Internal Server Error.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application domain object."
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Implemented",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application domain object."
								}
							]
						}
					},
					"status": "Not Implemented",
					"code": 501,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Service Unavailable.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application domain object."
								}
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Gateway Timeout.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/applicationDomains/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"applicationDomains",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the application domain object."
								}
							]
						}
					},
					"status": "Gateway Timeout",
					"code": 504,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				}
			]
		},
		{
			"name": "Get a list of users in your account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"var currentRole = \"\";\r",
							"var epAdminUser = false;\r",
							"var epNonAdminUserIds = [];\r",
							"\r",
							"\r",
							"for(i in jsonData.data){\r",
							"    epAdminUser = false;\r",
							"    \r",
							"    for(j in jsonData.data[i].roles){\r",
							"        currentRole = jsonData.data[i].roles[j]; \r",
							"        if(currentRole == \"administrator\"){\r",
							"               epAdminUser = true; \r",
							"        }\r",
							"    }\r",
							"        if(!epAdminUser){\r",
							"        epNonAdminUserIds.push(jsonData.data[i].id);\r",
							"        }\r",
							"\r",
							"}\r",
							"console.log(epNonAdminUserIds, epNonAdminUserIds);\r",
							"\r",
							"pm.variables.set(\"epNonAdminUserIds\", epNonAdminUserIds);\r",
							"pm.variables.set(\"epNonAdminUserIdsCount\", 0);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/platform/users?pageNumber=1&pageSize=100",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"platform",
						"users"
					],
					"query": [
						{
							"key": "pageNumber",
							"value": "1",
							"description": "The page number to retrieve."
						},
						{
							"key": "pageSize",
							"value": "100",
							"description": "The number of users to return on each page."
						},
						{
							"key": "name",
							"value": "<string>",
							"description": "(Required) ",
							"disabled": true
						},
						{
							"key": "firstName",
							"value": "<string>",
							"description": "(Required) ",
							"disabled": true
						},
						{
							"key": "email",
							"value": "<string>",
							"description": "(Required) ",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "<string>,<string>",
							"description": "(Required) ",
							"disabled": true
						},
						{
							"key": "roles",
							"value": "<string>,<string>",
							"description": "(Required) ",
							"disabled": true
						},
						{
							"key": "userGroups",
							"value": "<string>,<string>",
							"description": "(Required) ",
							"disabled": true
						}
					]
				},
				"description": "Get a list of users. You can retrieve a list of users matching on email, name, identifiers, or roles.<br><br><a href=\"https://api.solace.dev/cloud/reference/authentication\">Token Permissions</a>: [ `iam_users:get` ]"
			},
			"response": [
				{
					"name": "OK.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/platform/users?pageNumber=1&pageSize=10&name=<string>&firstName=<string>&email=<string>&ids=<string>,<string>&roles=<string>,<string>&userGroups=<string>,<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"platform",
								"users"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "1",
									"description": "The page number to retrieve."
								},
								{
									"key": "pageSize",
									"value": "10",
									"description": "The number of users to return on each page."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "firstName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "email",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "ids",
									"value": "<string>,<string>",
									"description": "(Required) "
								},
								{
									"key": "roles",
									"value": "<string>,<string>",
									"description": "(Required) "
								},
								{
									"key": "userGroups",
									"value": "<string>,<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "*/*"
						}
					],
					"cookie": [],
					"body": "{\n  \"data\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"organizationId\": \"<string>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groups\": [\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"userAttributes\": {\n        \"pariaturfc\": \"<string>\"\n      },\n      \"state\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"organizationId\": \"<string>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"groups\": [\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"userAttributes\": {\n        \"aute8b\": \"<string>\",\n        \"consectetur_1a\": \"<string>\"\n      },\n      \"state\": \"<string>\"\n    }\n  ],\n  \"meta\": {\n    \"cupidatat2d\": {},\n    \"deserunt__\": {}\n  }\n}"
				},
				{
					"name": "Bad request.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/platform/users?pageNumber=1&pageSize=10&name=<string>&firstName=<string>&email=<string>&ids=<string>,<string>&roles=<string>,<string>&userGroups=<string>,<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"platform",
								"users"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "1",
									"description": "The page number to retrieve."
								},
								{
									"key": "pageSize",
									"value": "10",
									"description": "The number of users to return on each page."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "firstName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "email",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "ids",
									"value": "<string>,<string>",
									"description": "(Required) "
								},
								{
									"key": "roles",
									"value": "<string>,<string>",
									"description": "(Required) "
								},
								{
									"key": "userGroups",
									"value": "<string>,<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\",\n  \"errorId\": \"<string>\",\n  \"meta\": {\n    \"fugiat_58a\": {},\n    \"dolor_8_4\": {}\n  },\n  \"validationDetails\": {\n    \"sunt3_\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"adipisicingc\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"consequat3\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/platform/users?pageNumber=1&pageSize=10&name=<string>&firstName=<string>&email=<string>&ids=<string>,<string>&roles=<string>,<string>&userGroups=<string>,<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"platform",
								"users"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "1",
									"description": "The page number to retrieve."
								},
								{
									"key": "pageSize",
									"value": "10",
									"description": "The number of users to return on each page."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "firstName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "email",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "ids",
									"value": "<string>,<string>",
									"description": "(Required) "
								},
								{
									"key": "roles",
									"value": "<string>,<string>",
									"description": "(Required) "
								},
								{
									"key": "userGroups",
									"value": "<string>,<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\",\n  \"errorId\": \"<string>\",\n  \"meta\": {\n    \"fugiat_58a\": {},\n    \"dolor_8_4\": {}\n  },\n  \"validationDetails\": {\n    \"sunt3_\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"adipisicingc\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"consequat3\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
				},
				{
					"name": "Forbidden.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/platform/users?pageNumber=1&pageSize=10&name=<string>&firstName=<string>&email=<string>&ids=<string>,<string>&roles=<string>,<string>&userGroups=<string>,<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"platform",
								"users"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "1",
									"description": "The page number to retrieve."
								},
								{
									"key": "pageSize",
									"value": "10",
									"description": "The number of users to return on each page."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "firstName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "email",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "ids",
									"value": "<string>,<string>",
									"description": "(Required) "
								},
								{
									"key": "roles",
									"value": "<string>,<string>",
									"description": "(Required) "
								},
								{
									"key": "userGroups",
									"value": "<string>,<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\",\n  \"errorId\": \"<string>\",\n  \"meta\": {\n    \"fugiat_58a\": {},\n    \"dolor_8_4\": {}\n  },\n  \"validationDetails\": {\n    \"sunt3_\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"adipisicingc\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"consequat3\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
				},
				{
					"name": "Not found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/platform/users?pageNumber=1&pageSize=10&name=<string>&firstName=<string>&email=<string>&ids=<string>,<string>&roles=<string>,<string>&userGroups=<string>,<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"platform",
								"users"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "1",
									"description": "The page number to retrieve."
								},
								{
									"key": "pageSize",
									"value": "10",
									"description": "The number of users to return on each page."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "firstName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "email",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "ids",
									"value": "<string>,<string>",
									"description": "(Required) "
								},
								{
									"key": "roles",
									"value": "<string>,<string>",
									"description": "(Required) "
								},
								{
									"key": "userGroups",
									"value": "<string>,<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\",\n  \"errorId\": \"<string>\",\n  \"meta\": {\n    \"fugiat_58a\": {},\n    \"dolor_8_4\": {}\n  },\n  \"validationDetails\": {\n    \"sunt3_\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"adipisicingc\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"consequat3\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
				}
			]
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(pm.variables.has(\"epNonAdminUserIds\")){\r",
							"    var epNonAdminUserIds = pm.variables.get(\"epNonAdminUserIds\");\r",
							"    var epNonAdminUserIdsCount = pm.variables.get(\"epNonAdminUserIdsCount\");\r",
							"\r",
							"    pm.collectionVariables.set(\"epStudentId\", epNonAdminUserIds[epNonAdminUserIdsCount]);\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//figure out whether to loop again\r",
							"if(pm.variables.has(\"epNonAdminUserIds\")){\r",
							"    epNonAdminUserIds = pm.variables.get(\"epNonAdminUserIds\");\r",
							"    epNonAdminUserIdsCount = pm.variables.get(\"epNonAdminUserIdsCount\");\r",
							"    epNonAdminUserIdsCount++;\r",
							"    if(epNonAdminUserIdsCount < epNonAdminUserIds.length){\r",
							"        pm.variables.set(\"epNonAdminUserIdsCount\", epNonAdminUserIdsCount);\r",
							"        postman.setNextRequest(\"Delete user\");\r",
							"    }\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.solace.cloud/api/v0/users/:userId",
					"protocol": "https",
					"host": [
						"api",
						"solace",
						"cloud"
					],
					"path": [
						"api",
						"v0",
						"users",
						":userId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{epStudentId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Gets the event mesh objects",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = JSON.parse(responseBody);\r",
							"var epEventMeshIds = [];\r",
							"\r",
							"\r",
							"for(var i=0; i < response.data.length; i++){\r",
							"\r",
							"    epEventMeshIds.push(response.data[i].id);\r",
							"\r",
							"    \r",
							"}\r",
							"\r",
							"pm.variables.set(\"epEventMeshIds\", epEventMeshIds);\r",
							"pm.variables.set(\"epEventMeshIdsCount\", 0);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json;charset=UTF-8"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes?pageSize=100",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"architecture",
						"eventMeshes"
					],
					"query": [
						{
							"key": "pageSize",
							"value": "100",
							"description": "The number of event meshes to get per page."
						},
						{
							"key": "pageNumber",
							"value": "1",
							"description": "The page number to get.",
							"disabled": true
						},
						{
							"key": "name",
							"value": "occaecat in sunt",
							"description": "Name of the event mesh to match on.",
							"disabled": true
						},
						{
							"key": "environmentId",
							"value": "occaecat in sunt",
							"description": "Match only event meshes in the given environment",
							"disabled": true
						}
					]
				},
				"description": "Use this API to retrieve a list of event meshes that match the given parameters."
			},
			"response": [
				{
					"name": "The list of event meshes and the accompanying metadata.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes?pageSize=20&pageNumber=1&name=occaecat in sunt&environmentId=occaecat in sunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "occaecat in sunt"
								},
								{
									"key": "environmentId",
									"value": "occaecat in sunt"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\n  \"data\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"meta\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
				},
				{
					"name": "Bad Request.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes?pageSize=20&pageNumber=1&name=occaecat in sunt&environmentId=occaecat in sunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "occaecat in sunt"
								},
								{
									"key": "environmentId",
									"value": "occaecat in sunt"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes?pageSize=20&pageNumber=1&name=occaecat in sunt&environmentId=occaecat in sunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "occaecat in sunt"
								},
								{
									"key": "environmentId",
									"value": "occaecat in sunt"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Forbidden.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes?pageSize=20&pageNumber=1&name=occaecat in sunt&environmentId=occaecat in sunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "occaecat in sunt"
								},
								{
									"key": "environmentId",
									"value": "occaecat in sunt"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes?pageSize=20&pageNumber=1&name=occaecat in sunt&environmentId=occaecat in sunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "occaecat in sunt"
								},
								{
									"key": "environmentId",
									"value": "occaecat in sunt"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Method Not Allowed",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes?pageSize=20&pageNumber=1&name=occaecat in sunt&environmentId=occaecat in sunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "occaecat in sunt"
								},
								{
									"key": "environmentId",
									"value": "occaecat in sunt"
								}
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Internal Server Error.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes?pageSize=20&pageNumber=1&name=occaecat in sunt&environmentId=occaecat in sunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "occaecat in sunt"
								},
								{
									"key": "environmentId",
									"value": "occaecat in sunt"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Implemented",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes?pageSize=20&pageNumber=1&name=occaecat in sunt&environmentId=occaecat in sunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "occaecat in sunt"
								},
								{
									"key": "environmentId",
									"value": "occaecat in sunt"
								}
							]
						}
					},
					"status": "Not Implemented",
					"code": 501,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Service Unavailable.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes?pageSize=20&pageNumber=1&name=occaecat in sunt&environmentId=occaecat in sunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "occaecat in sunt"
								},
								{
									"key": "environmentId",
									"value": "occaecat in sunt"
								}
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Gateway Timeout.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes?pageSize=20&pageNumber=1&name=occaecat in sunt&environmentId=occaecat in sunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "name",
									"value": "occaecat in sunt"
								},
								{
									"key": "environmentId",
									"value": "occaecat in sunt"
								}
							]
						}
					},
					"status": "Gateway Timeout",
					"code": 504,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				}
			]
		},
		{
			"name": "Deletes an event mesh object",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(pm.variables.has(\"epEventMeshIds\")){\r",
							"    var epEventMeshIds = pm.variables.get(\"epEventMeshIds\");\r",
							"    var epEventMeshIdsCount = pm.variables.get(\"epEventMeshIdsCount\");\r",
							"\r",
							"    pm.collectionVariables.set(\"epEventMeshId\", epEventMeshIds[epEventMeshIdsCount]);\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//figure out whether to loop again\r",
							"if(pm.variables.has(\"epEventMeshIds\")){\r",
							"    epEventMeshIds = pm.variables.get(\"epEventMeshIds\");\r",
							"    epEventMeshIdsCount = pm.variables.get(\"epEventMeshIdsCount\");\r",
							"    epEventMeshIdsCount++;\r",
							"    if(epEventMeshIdsCount < epEventMeshIds.length){\r",
							"        pm.variables.set(\"epEventMeshIdsCount\", epEventMeshIdsCount);\r",
							"        postman.setNextRequest(\"Deletes an event mesh object\");\r",
							"    }\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes/:epEventMeshId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"architecture",
						"eventMeshes",
						":epEventMeshId"
					],
					"variable": [
						{
							"key": "epEventMeshId",
							"value": "{{epEventMeshId}}"
						}
					]
				},
				"description": "Use this API to delete an event mesh."
			},
			"response": [
				{
					"name": "No content is returned.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the event mesh object."
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the event mesh object."
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the event mesh object."
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Forbidden.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the event mesh object."
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Found.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the event mesh object."
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Method Not Allowed",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the event mesh object."
								}
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Internal Server Error.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the event mesh object."
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Implemented",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the event mesh object."
								}
							]
						}
					},
					"status": "Not Implemented",
					"code": 501,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Service Unavailable.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the event mesh object."
								}
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Gateway Timeout.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventMeshes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventMeshes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "occaecat in sunt",
									"description": "(Required) The ID of the event mesh object."
								}
							]
						}
					},
					"status": "Gateway Timeout",
					"code": 504,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"amet_751\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"proident__da\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laboris_65d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				}
			]
		},
		{
			"name": "Retrieves a list of messaging services",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = JSON.parse(responseBody);\r",
							"var epMsgServiceIds = [];\r",
							"\r",
							"\r",
							"for(var i=0; i < response.data.length; i++){\r",
							"\r",
							"    epMsgServiceIds.push(response.data[i].id);\r",
							"\r",
							"    \r",
							"}\r",
							"\r",
							"pm.variables.set(\"epMsgServiceIds\", epMsgServiceIds);\r",
							"pm.variables.set(\"epMsgServiceIdCount\", 0);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/architecture/messagingServices?pageSize=100",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"architecture",
						"messagingServices"
					],
					"query": [
						{
							"key": "pageSize",
							"value": "100",
							"description": "The number of messaging services to get per page."
						},
						{
							"key": "pageNumber",
							"value": "1",
							"description": "The page number to get.",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "reprehenderit aliquip exercitation",
							"description": "Sort based on the provided parameters. <br> The value can either be a standalone field name (`?sort=<field>`) or a field and direction, which must be delimited by a colon (`?sort=<field>:<asc|desc>`). If the direction is not specified, the default is ascending.",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "dolore sunt irure",
							"description": "The IDs of the messaging services.",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "quis",
							"description": "The IDs of the messaging services.",
							"disabled": true
						},
						{
							"key": "messagingServiceType",
							"value": "reprehenderit aliquip exercitation",
							"description": "Match only messaging services of the given type",
							"disabled": true
						},
						{
							"key": "runtimeAgentId",
							"value": "reprehenderit aliquip exercitation",
							"description": "Match only messaging services in the given runtimeAgentId",
							"disabled": true
						},
						{
							"key": "eventMeshId",
							"value": "reprehenderit aliquip exercitation",
							"description": "Match only messaging services in the given eventMeshId",
							"disabled": true
						},
						{
							"key": "eventManagementAgentId",
							"value": "reprehenderit aliquip exercitation",
							"disabled": true
						}
					]
				},
				"description": "Use this API to retrieve a list of messaging services that match the given parameters."
			},
			"response": [
				{
					"name": "The list of messaging services and the accompanying metadata.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&messagingServiceType=reprehenderit aliquip exercitation&runtimeAgentId=reprehenderit aliquip exercitation&eventMeshId=reprehenderit aliquip exercitation&eventManagementAgentId=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "messagingServiceType",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "runtimeAgentId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventMeshId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentId",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"data\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"meta\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
				},
				{
					"name": "Bad Request.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&messagingServiceType=reprehenderit aliquip exercitation&runtimeAgentId=reprehenderit aliquip exercitation&eventMeshId=reprehenderit aliquip exercitation&eventManagementAgentId=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "messagingServiceType",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "runtimeAgentId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventMeshId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentId",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&messagingServiceType=reprehenderit aliquip exercitation&runtimeAgentId=reprehenderit aliquip exercitation&eventMeshId=reprehenderit aliquip exercitation&eventManagementAgentId=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "messagingServiceType",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "runtimeAgentId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventMeshId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentId",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Forbidden.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&messagingServiceType=reprehenderit aliquip exercitation&runtimeAgentId=reprehenderit aliquip exercitation&eventMeshId=reprehenderit aliquip exercitation&eventManagementAgentId=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "messagingServiceType",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "runtimeAgentId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventMeshId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentId",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&messagingServiceType=reprehenderit aliquip exercitation&runtimeAgentId=reprehenderit aliquip exercitation&eventMeshId=reprehenderit aliquip exercitation&eventManagementAgentId=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "messagingServiceType",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "runtimeAgentId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventMeshId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentId",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Method Not Allowed",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&messagingServiceType=reprehenderit aliquip exercitation&runtimeAgentId=reprehenderit aliquip exercitation&eventMeshId=reprehenderit aliquip exercitation&eventManagementAgentId=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "messagingServiceType",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "runtimeAgentId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventMeshId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentId",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Internal Server Error.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&messagingServiceType=reprehenderit aliquip exercitation&runtimeAgentId=reprehenderit aliquip exercitation&eventMeshId=reprehenderit aliquip exercitation&eventManagementAgentId=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "messagingServiceType",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "runtimeAgentId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventMeshId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentId",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Implemented",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&messagingServiceType=reprehenderit aliquip exercitation&runtimeAgentId=reprehenderit aliquip exercitation&eventMeshId=reprehenderit aliquip exercitation&eventManagementAgentId=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "messagingServiceType",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "runtimeAgentId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventMeshId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentId",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Not Implemented",
					"code": 501,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Service Unavailable.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&messagingServiceType=reprehenderit aliquip exercitation&runtimeAgentId=reprehenderit aliquip exercitation&eventMeshId=reprehenderit aliquip exercitation&eventManagementAgentId=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "messagingServiceType",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "runtimeAgentId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventMeshId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentId",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Gateway Timeout.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&messagingServiceType=reprehenderit aliquip exercitation&runtimeAgentId=reprehenderit aliquip exercitation&eventMeshId=reprehenderit aliquip exercitation&eventManagementAgentId=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "messagingServiceType",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "runtimeAgentId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventMeshId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentId",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Gateway Timeout",
					"code": 504,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				}
			]
		},
		{
			"name": "Deletes a messaging service object",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(pm.variables.has(\"epMsgServiceIds\")){\r",
							"    var epMsgServiceIds = pm.variables.get(\"epMsgServiceIds\");\r",
							"    var epMsgServiceIdCount = pm.variables.get(\"epMsgServiceIdCount\");\r",
							"\r",
							"    pm.collectionVariables.set(\"epMsgServiceId\", epMsgServiceIds[epMsgServiceIdCount]);\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//figure out whether to loop again\r",
							"if(pm.variables.has(\"epMsgServiceIds\")){\r",
							"    epMsgServiceIds = pm.variables.get(\"epMsgServiceIds\");\r",
							"    epMsgServiceIdCount = pm.variables.get(\"epMsgServiceIdCount\");\r",
							"    epMsgServiceIdCount++;\r",
							"    if(epMsgServiceIdCount < epMsgServiceIds.length){\r",
							"        pm.variables.set(\"epMsgServiceIdCount\", epMsgServiceIdCount);\r",
							"        postman.setNextRequest(\"Deletes a messaging service object\");\r",
							"    }\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/architecture/messagingServices/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"architecture",
						"messagingServices",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{epMsgServiceId}}",
							"description": "(Required) The ID of the messaging service object."
						}
					]
				},
				"description": "Use this API to delete a messaging service."
			},
			"response": [
				{
					"name": "No content is returned.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the messaging service object."
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the messaging service object."
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the messaging service object."
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Forbidden.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the messaging service object."
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Found.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the messaging service object."
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Method Not Allowed",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the messaging service object."
								}
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Internal Server Error.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the messaging service object."
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Implemented",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the messaging service object."
								}
							]
						}
					},
					"status": "Not Implemented",
					"code": 501,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Service Unavailable.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the messaging service object."
								}
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Gateway Timeout.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/messagingServices/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"messagingServices",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the messaging service object."
								}
							]
						}
					},
					"status": "Gateway Timeout",
					"code": 504,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				}
			]
		},
		{
			"name": "(Beta) Retrieves a list of EMAs Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = JSON.parse(responseBody);\r",
							"var epEventManagementAgentIds = [];\r",
							"\r",
							"\r",
							"for(var i=0; i < response.data.length; i++){\r",
							"\r",
							"    epEventManagementAgentIds.push(response.data[i].id);\r",
							"\r",
							"    \r",
							"}\r",
							"//console.log(\"epEventManagementAgentIds\", epEventManagementAgentIds);\r",
							"\r",
							"pm.variables.set(\"epEventManagementAgentIds\", epEventManagementAgentIds);\r",
							"pm.variables.set(\"epEventManagementAgentIdsCount\", 0);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents?pageSize=100",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"architecture",
						"eventManagementAgents"
					],
					"query": [
						{
							"key": "pageSize",
							"value": "100",
							"description": "The number of EMAs to get per page."
						},
						{
							"key": "pageNumber",
							"value": "1",
							"description": "The page number to get.",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "reprehenderit aliquip exercitation",
							"description": "Sort based on the provided parameters. <br> The value can either be a standalone field name (`?sort=<field>`) or a field and direction, which must be delimited by a colon (`?sort=<field>:<asc|desc>`). If the direction is not specified, the default is ascending.",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "dolore sunt irure",
							"description": "The IDs of the EMAs.",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "quis",
							"description": "The IDs of the EMAs.",
							"disabled": true
						},
						{
							"key": "createdBy",
							"value": "reprehenderit aliquip exercitation",
							"description": "Match only EMAs created by this user",
							"disabled": true
						},
						{
							"key": "eventManagementAgentRegionId",
							"value": "reprehenderit aliquip exercitation",
							"description": "Match only EMAs in the given EMA-Region",
							"disabled": true
						},
						{
							"key": "include",
							"value": "reprehenderit aliquip exercitation",
							"description": "Specify extra data to be included, options are: referencedByMessagingServiceIds",
							"disabled": true
						}
					]
				},
				"description": "Use this API to retrieve a list of EMAs that match the given parameters."
			},
			"response": [
				{
					"name": "The list of EMAs and the accompanying metadata.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&createdBy=reprehenderit aliquip exercitation&eventManagementAgentRegionId=reprehenderit aliquip exercitation&include=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "createdBy",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentRegionId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "include",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"data\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"meta\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
				},
				{
					"name": "Bad Request.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&createdBy=reprehenderit aliquip exercitation&eventManagementAgentRegionId=reprehenderit aliquip exercitation&include=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "createdBy",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentRegionId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "include",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&createdBy=reprehenderit aliquip exercitation&eventManagementAgentRegionId=reprehenderit aliquip exercitation&include=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "createdBy",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentRegionId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "include",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Forbidden.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&createdBy=reprehenderit aliquip exercitation&eventManagementAgentRegionId=reprehenderit aliquip exercitation&include=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "createdBy",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentRegionId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "include",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&createdBy=reprehenderit aliquip exercitation&eventManagementAgentRegionId=reprehenderit aliquip exercitation&include=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "createdBy",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentRegionId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "include",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Method Not Allowed",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&createdBy=reprehenderit aliquip exercitation&eventManagementAgentRegionId=reprehenderit aliquip exercitation&include=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "createdBy",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentRegionId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "include",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Internal Server Error.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&createdBy=reprehenderit aliquip exercitation&eventManagementAgentRegionId=reprehenderit aliquip exercitation&include=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "createdBy",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentRegionId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "include",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Implemented",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&createdBy=reprehenderit aliquip exercitation&eventManagementAgentRegionId=reprehenderit aliquip exercitation&include=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "createdBy",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentRegionId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "include",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Not Implemented",
					"code": 501,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Service Unavailable.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&createdBy=reprehenderit aliquip exercitation&eventManagementAgentRegionId=reprehenderit aliquip exercitation&include=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "createdBy",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentRegionId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "include",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Gateway Timeout.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&ids=velit irure eiusmod dolore&ids=culpa&createdBy=reprehenderit aliquip exercitation&eventManagementAgentRegionId=reprehenderit aliquip exercitation&include=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "ids",
									"value": "velit irure eiusmod dolore"
								},
								{
									"key": "ids",
									"value": "culpa"
								},
								{
									"key": "createdBy",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "eventManagementAgentRegionId",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "include",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Gateway Timeout",
					"code": 504,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				}
			]
		},
		{
			"name": "Deletes an EMA object",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(pm.variables.has(\"epEventManagementAgentIds\")){\r",
							"    var epEventManagementAgentIds = pm.variables.get(\"epEventManagementAgentIds\");\r",
							" //   console.log(\"epEventManagementAgentIds\", epEventManagementAgentIds);\r",
							"    var epEventManagementAgentIdsCount = pm.variables.get(\"epEventManagementAgentIdsCount\");\r",
							"\r",
							"    pm.collectionVariables.set(\"epEventManagementAgentId\", epEventManagementAgentIds[epEventManagementAgentIdsCount]);\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//figure out whether to loop again\r",
							"if(pm.variables.has(\"epEventManagementAgentIds\")){\r",
							"    var epEventManagementAgentIds = pm.variables.get(\"epEventManagementAgentIds\");\r",
							"//    console.log(\"epEventManagementAgentIds\", epEventManagementAgentIds);\r",
							"    var epEventManagementAgentIdsCount = pm.variables.get(\"epEventManagementAgentIdsCount\");\r",
							"    epEventManagementAgentIdsCount++;\r",
							"\r",
							"//    console.log(epEventManagementAgentIdsCount, epEventManagementAgentIds.length)\r",
							"    if(epEventManagementAgentIdsCount < epEventManagementAgentIds.length){\r",
							"        pm.variables.set(\"epEventManagementAgentIdsCount\", epEventManagementAgentIdsCount);\r",
							"        postman.setNextRequest(\"Deletes an EMA object\");\r",
							"    }\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"architecture",
						"eventManagementAgents",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{epEventManagementAgentId}}",
							"description": "(Required) The ID of the EMA object."
						}
					]
				},
				"description": "Use this API to delete an EMA."
			},
			"response": [
				{
					"name": "No content is returned.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the EMA object."
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the EMA object."
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the EMA object."
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Forbidden.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the EMA object."
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Found.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the EMA object."
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Method Not Allowed",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the EMA object."
								}
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Internal Server Error.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the EMA object."
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Implemented",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the EMA object."
								}
							]
						}
					},
					"status": "Not Implemented",
					"code": 501,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Service Unavailable.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the EMA object."
								}
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Gateway Timeout.",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/eventManagementAgents/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"eventManagementAgents",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit aliquip exercitation",
									"description": "(Required) The ID of the EMA object."
								}
							]
						}
					},
					"status": "Gateway Timeout",
					"code": 504,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				}
			]
		},
		{
			"name": "Get the environment objects",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = JSON.parse(responseBody);\r",
							"var epEnvironmentIds = [];\r",
							"var epEnvironmentNames = [];\r",
							"\r",
							"for(var i=0; i < response.data.length; i++){\r",
							"    if(response.data[i].name != \"Default\"){\r",
							"        epEnvironmentIds.push(response.data[i].id);\r",
							"    }\r",
							"}\r",
							"\r",
							"pm.variables.set(\"epEnvironmentIds\", epEnvironmentIds);\r",
							"pm.variables.set(\"epEnvironmentIdsCount\", 0);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json;charset=UTF-8"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/architecture/environments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"architecture",
						"environments"
					],
					"query": [
						{
							"key": "pageSize",
							"value": "20",
							"description": "The number of events to get per page.",
							"disabled": true
						},
						{
							"key": "pageNumber",
							"value": "1",
							"description": "The page number to get.",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "reprehenderit aliquip exercitation",
							"disabled": true
						},
						{
							"key": "like",
							"value": "reprehenderit aliquip exercitation",
							"disabled": true
						}
					]
				},
				"description": "Use this API to list all environments."
			},
			"response": [
				{
					"name": "Retrieve a list of environments and the accompanying metadata.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/environments?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&like=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"environments"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "like",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "{\n  \"data\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"meta\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
				},
				{
					"name": "Bad Request.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/environments?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&like=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"environments"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "like",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/environments?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&like=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"environments"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "like",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Forbidden.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/environments?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&like=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"environments"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "like",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/environments?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&like=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"environments"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "like",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Method Not Allowed",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/environments?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&like=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"environments"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "like",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Internal Server Error.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/environments?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&like=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"environments"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "like",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Not Implemented",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/environments?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&like=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"environments"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "like",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Not Implemented",
					"code": 501,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Service Unavailable.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/environments?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&like=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"environments"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "like",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				},
				{
					"name": "Gateway Timeout.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/architecture/environments?pageSize=20&pageNumber=1&sort=reprehenderit aliquip exercitation&like=reprehenderit aliquip exercitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"architecture",
								"environments"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "reprehenderit aliquip exercitation"
								},
								{
									"key": "like",
									"value": "reprehenderit aliquip exercitation"
								}
							]
						}
					},
					"status": "Gateway Timeout",
					"code": 504,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"An error occurred\",\n  \"errorId\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"meta\": {\n    \"enim_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"validationDetails\": {\n    \"aliqua_5e5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
				}
			]
		},
		{
			"name": "Delete an environment",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(pm.variables.has(\"epEnvironmentIds\")){\r",
							"    console.log(\"epEnvironmentIds\", epEnvironmentIds);\r",
							"    var epEnvironmentIds = pm.variables.get(\"epEnvironmentIds\");\r",
							"    var epEnvironmentIdsCount = pm.variables.get(\"epEnvironmentIdsCount\");\r",
							"\r",
							"    pm.collectionVariables.set(\"epEnvironmentId\", epEnvironmentIds[epEnvironmentIdsCount]);\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//figure out whether to loop again\r",
							"if(pm.variables.has(\"epEnvironmentIds\")){\r",
							"    epEnvironmentIds = pm.variables.get(\"epEnvironmentIds\");\r",
							"    epEnvironmentIdsCount = pm.variables.get(\"epEnvironmentIdsCount\");\r",
							"    epEnvironmentIdsCount++;\r",
							"    if(epEnvironmentIdsCount < epEnvironmentIds.length){\r",
							"        pm.variables.set(\"epEnvironmentIdsCount\", epEnvironmentIdsCount);\r",
							"        postman.setNextRequest(\"Delete an environment\");\r",
							"    }\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v2/platform/environments/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"platform",
						"environments",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{epEnvironmentId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{api_key}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "epEnvironmentId",
			"value": ""
		},
		{
			"key": "epApplicationId",
			"value": ""
		},
		{
			"key": "epApplicationDomainId",
			"value": ""
		},
		{
			"key": "epStudentId",
			"value": ""
		},
		{
			"key": "epApplicationVersionId",
			"value": ""
		},
		{
			"key": "epMsgServiceIds",
			"value": ""
		},
		{
			"key": "epEventMeshId",
			"value": ""
		},
		{
			"key": "api_key",
			"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6Im1hYXNfcHJvZF8yMDIwMDMyNiIsInR5cCI6IkpXVCJ9.eyJvcmciOiJqa2htZWRqdDZ0YSIsIm9yZ1R5cGUiOiJFTlRFUlBSSVNFIiwic3ViIjoibW5kNjEzcDBpZDMiLCJwZXJtaXNzaW9ucyI6IkFBQUFBSUFBQUFBQWZ6Z0FBQUFBQUFBQUFBQUFBQUFBQUFDd1NJY2hJQWdBTFAvL2c1WGZCZDREV1BBRDR4OGdQUT09IiwiYXBpVG9rZW5JZCI6Im84MjV0M3pocGp4IiwiaXNzIjoiU29sYWNlIENvcnBvcmF0aW9uIiwiaWF0IjoxNjczOTg0MTgyfQ.AgO6gFobLrjQP1CyXRsvpDoDxNgLZ3KAMLmhDOUWA8l14lRp4nEbWKVRyhvcayoQotXUkVv5IRWWNDMVfPsf1STf3KbHAwPOm-nHGQJ6QySFFr-odzeIfWVCp0Rf6fRkdn6luVRQzpHu0BxVHZRIK2E7DnPUJQLMxZros8Vpi_uhUdmPTlwoyqekzPAPSIbMccqdIkD0RbNJ1_1QR4yjMyn_E3sFHdyhhcp0w4Ou6_AHt_HYBtwHzd7PP7P1-9KFdEYYCxdiuXo7CsdAZDWm-mdCWk4VcHf2cOgoV3h1uk2uX9v_QpOtLM00NUQAPV02QwVciRFvNoyYdp9Rx6YHFQ"
		},
		{
			"key": "baseUrl",
			"value": "https://api.solace.cloud"
		},
		{
			"key": "epMsgServiceId",
			"value": "23"
		},
		{
			"key": "epEventManagementAgentId",
			"value": ""
		}
	]
}